// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using OpenPositionService;

#nullable disable

namespace RecruitmentManagementSystemDb.Migrations
{
    [DbContext(typeof(RecruitmentMgmtSystemDbContext))]
    [Migration("20230201162851_init")]
    partial class init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("RecruitmentManagementSystemModels.V1.Account", b =>
                {
                    b.Property<string>("AccountID")
                        .HasColumnType("text");

                    b.Property<string>("AccountDetails")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("AccountManager")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("AccountName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("AccountID");

                    b.ToTable("Account");
                });

            modelBuilder.Entity("RecruitmentManagementSystemModels.V1.CandidateProfile", b =>
                {
                    b.Property<string>("CandidateID")
                        .HasColumnType("text");

                    b.Property<string>("CandidateName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<long>("ContactNumber")
                        .HasColumnType("bigint");

                    b.Property<string>("CurrentCTC")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ExpectedCTC")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Gender")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("HasOfferLetter")
                        .HasColumnType("boolean");

                    b.Property<long>("JobID")
                        .HasColumnType("bigint");

                    b.Property<string>("MaritalStatus")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("NoticePeriod")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("PermanenetAddress")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("PrimarySkills")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ResidentialAddress")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("SecondarySkills")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("YearOfExperience")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("CandidateID");

                    b.ToTable("CandidateProfiles");
                });

            modelBuilder.Entity("RecruitmentManagementSystemModels.V1.OfferDetail", b =>
                {
                    b.Property<int>("OfferId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("OfferId"));

                    b.Property<string>("CandidateID")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("CompanyName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("DateOfJoining")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("JobID")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("OfferedCTC")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("OfferId");

                    b.ToTable("OfferDetails");
                });

            modelBuilder.Entity("RecruitmentManagementSystemModels.V1.OpenPosition", b =>
                {
                    b.Property<long>("JobId")
                        .HasColumnType("bigint");

                    b.Property<string>("AccountID")
                        .HasColumnType("text");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("JobDescription")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("JobTitle")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Location")
                        .HasColumnType("text");

                    b.Property<int>("NoOfPositions")
                        .HasColumnType("integer");

                    b.Property<DateTime>("PostedOn")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("ProjectID")
                        .HasColumnType("text");

                    b.Property<string>("Qualification")
                        .HasColumnType("text");

                    b.Property<string>("SkillSet")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("UpdatedBy")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("UpdatedOn")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("YearOfExp")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("JobId");

                    b.HasIndex("AccountID");

                    b.HasIndex("JobTitle")
                        .IsUnique();

                    b.HasIndex("ProjectID");

                    b.ToTable("OpenPositions");
                });

            modelBuilder.Entity("RecruitmentManagementSystemModels.V1.Project", b =>
                {
                    b.Property<string>("ProjectID")
                        .HasColumnType("text");

                    b.Property<string>("AccountID")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ProjectDetails")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ProjectManager")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ProjectName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("ProjectID");

                    b.ToTable("Project");
                });

            modelBuilder.Entity("RecruitmentManagementSystemModels.V1.OpenPosition", b =>
                {
                    b.HasOne("RecruitmentManagementSystemModels.V1.Account", "Account")
                        .WithMany()
                        .HasForeignKey("AccountID");

                    b.HasOne("RecruitmentManagementSystemModels.V1.Project", "Project")
                        .WithMany()
                        .HasForeignKey("ProjectID");

                    b.Navigation("Account");

                    b.Navigation("Project");
                });
#pragma warning restore 612, 618
        }
    }
}
